/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import Class.CurrentUser;
import Class.Worker;
import DAO.WorkerDAOCa2;
import DAO.WorkerDAOCa3;
import java.sql.Date;
import java.sql.Time;
import java.time.Duration;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vuqua
 */
public class FormCa3 extends javax.swing.JFrame {

    /**
     * Creates new form FormCa3
     */
    private void loadDataToForm() {
    try {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Mã Công Nhân");
        model.addColumn("Tên Công Nhân");
        model.addColumn("Đơn Vị");
        model.addColumn("Ngày Làm");
        model.addColumn("Checkin");
        model.addColumn("Checkout");
        model.addColumn("Thời Gian Làm");
        model.addColumn("Tên Ca");

        // Lấy danh sách Worker từ CSDL
       // Trong một lớp khác, ví dụ WorkerForm
        WorkerDAOCa3 workerDAO = new WorkerDAOCa3();
        List<Worker> workers = workerDAO.getAllWorkers(CurrentUser.getInstance().getIdUser());


        // Thêm dữ liệu từ danh sách Worker vào model
        for (Worker worker : workers) {
            Object[] row = {
                worker.getMaCongNhan(),
                worker.getTenCongNhan(),
                worker.getDonVi(),
                worker.getNgayLam(),
                worker.getCheckIn(),
                worker.getCheckOut(),
                worker.getThoiGianLam(),
                "Ca 3"
            };
            model.addRow(row);
        }

        // Set model cho table
        jTable1.setModel(model);

    }catch(Exception ex) {
        ex.printStackTrace();
        // Xử lý lỗi nếu cần
    }
}
    public FormCa3() {
        initComponents();
        loadDataToForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Checkin");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Checkout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(jButton1)
                .addGap(154, 154, 154)
                .addComponent(jButton2)
                .addContainerGap(235, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         WorkerDAOCa3 workerDAO = new WorkerDAOCa3();
        java.util.Date currentDate = new java.util.Date();
        Date ngayLam = new Date(currentDate.getTime());
        String idCongNhan = CurrentUser.getInstance().getIdUser();

        if (!workerDAO.isDateExists(ngayLam, idCongNhan)) {
            Worker newObj = new Worker();
            newObj.setMaCongNhan(idCongNhan);
            newObj.setTenCongNhan(CurrentUser.getInstance().getTenCongNhan());
            newObj.setDonVi(CurrentUser.getInstance().getDonVi());
            newObj.setPassWord(CurrentUser.getInstance().getPassWord());
            newObj.setIdCa(3);
            newObj.setNgayLam(ngayLam);
            newObj.setCheckIn(new Time(currentDate.getTime()));

            workerDAO.insertWorker(newObj);
            loadDataToForm();
        } else {
            // Ngày làm đã tồn tại, xử lý theo ý của bạn (ví dụ: thông báo lỗi hoặc thực hiện hành động khác)
            JOptionPane.showMessageDialog(this, "Đã checkin công nhân có mã công nhân: " + idCongNhan);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        WorkerDAOCa3 workerDAO = new WorkerDAOCa3();
        Worker checkOut = workerDAO.getWorkerByCurrentDate(CurrentUser.getInstance().getIdUser());

        // Kiểm tra giá trị checkout đã tồn tại hay chưa
        if (checkOut.getCheckOut() != null) {
        // Đã tồn tại giá trị checkout, thông báo là đã checkin rồi
        JOptionPane.showMessageDialog(this, "Bạn đã checkout ca 3 hôm nay rồi!!!.");
        } else {
            java.util.Date currentDate = new java.util.Date();
            checkOut.setCheckOut(new Time(currentDate.getTime()));
            Time checkIn = checkOut.getCheckIn();
            Time checkOutTime = new Time(currentDate.getTime());

            // Chuyển đổi thời gian từ java.sql.Time sang java.time.LocalTime để thuận tiện trong việc tính toán
            LocalTime localCheckIn = checkIn.toLocalTime();
            LocalTime localCheckOut = checkOutTime.toLocalTime();

            // Tính thời gian làm bằng cách lấy sự chênh lệch giữa checkOut và checkIn
            Duration duration = Duration.between(localCheckIn, localCheckOut);

            // Lấy giờ, phút, giây từ thời gian làm
            long hours = duration.toHours();
            long minutes = duration.toMinutesPart();
            long seconds = duration.toSecondsPart();

            // Gán kết quả vào trường thời gian làm của đối tượng Worker
            checkOut.setThoiGianLam(Time.valueOf(String.format("%02d:%02d:%02d", hours, minutes, seconds)));
            workerDAO.updateWorkerByDate(checkOut);
            loadDataToForm();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCa3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCa3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
