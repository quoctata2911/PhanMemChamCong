/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;
import DAO.NhanVienCaChieuDAO;
import Class.*;
import java.sql.SQLException;
import java.sql.Date;
import java.sql.Time;
import java.time.Duration;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vuqua
 */
public class FormNhanVienChieu extends javax.swing.JFrame {

    /**
     * Creates new form FormNhanVienSang
     */
    private void loadNhanVienToForm() {
    try {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Mã Nhân Viên");
        model.addColumn("Tên Nhân Viên");
        model.addColumn("Đơn Vị");
        model.addColumn("Ngày Làm Việc");
        model.addColumn("Checkin");
        model.addColumn("Checkout");
        model.addColumn("Đi muộn");
        model.addColumn("Về sớm");
        model.addColumn("Ca");
        model.addColumn("Tình trạng");
        
        

        // Lấy danh sách Nhân Viên từ CSDL
        NhanVienCaChieuDAO nhanVienDAO = new NhanVienCaChieuDAO();
        List<Officer> nhanViens = nhanVienDAO.getAllNhanVien(CurrentNhanVien.getInstance().getManhanvien());

        // Thêm dữ liệu từ danh sách Nhân Viên vào model
        for (Officer nhanVien : nhanViens) {
            String tinhTrang;
            switch (nhanVien.getStatus()) {
                case 0:
                    tinhTrang = "Không đi làm";
                    break;
                case 1:
                    tinhTrang = "Có đi làm";
                    break;
                case 2:
                    tinhTrang = "Đang đi làm";
                    break;
                default:
                    tinhTrang = "Tình trạng không xác định";
                    break;
}

            Object[] row = {
                nhanVien.getMaNhanVien(),
                nhanVien.getTenNhanVien(),
                nhanVien.getDonVi(),
                nhanVien.getNgayLamViec(),
                nhanVien.getCheckIn(),
                nhanVien.getCheckOut(),
                nhanVien.getDiMuon(),
                nhanVien.getVeSom(),
                "Ca chiều",
                tinhTrang
                
               
            };
            model.addRow(row);
        }

        // Set model cho table
        jTable1.setModel(model);

    } catch (Exception ex) {
        ex.printStackTrace();
        // Xử lý lỗi nếu cần
    }
}

    public FormNhanVienChieu() {
        initComponents();
        loadNhanVienToForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Checkin");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Checkout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jButton1)
                .addGap(191, 191, 191)
                .addComponent(jButton2)
                .addContainerGap(243, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(0, 64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       NhanVienCaChieuDAO nhanVienDAO = new NhanVienCaChieuDAO();
        java.util.Date currentDate = new java.util.Date();
        Date ngayLam = new Date(currentDate.getTime());
        String manhanvien = CurrentNhanVien.getInstance().getManhanvien();

        // Lấy thời gian checkIn và thời gian bắt đầu làm việc
        Time checkIn = new Time(currentDate.getTime());
        Time gioBatDau = nhanVienDAO.getGioLamViecById(2).getThoiGianBatDau();
        Time gioKetThuc = nhanVienDAO.getGioLamViecById(2).getThoiGianKetThuc();

        // Chuyển đổi thời gian từ java.sql.Time sang java.time.LocalTime để thuận tiện trong việc tính toán
        LocalTime localCheckIn = checkIn.toLocalTime();
        LocalTime localBatDau = gioBatDau.toLocalTime();
        LocalTime localKetThuc = gioKetThuc.toLocalTime();

        // So sánh thời gian checkIn với thời gian bắt đầu làm việc
        int compareResult = localCheckIn.compareTo(localBatDau);

        // Kiểm tra nếu thời gian checkIn vượt quá giờ bắt đầu làm việc
        
            // Tính toán thời gian đi muộn
            Duration duration = Duration.between(localBatDau, localCheckIn);
            long hours = duration.toHours();
            long minutes = duration.toMinutesPart();
            long seconds = duration.toSecondsPart();

            // Gán kết quả vào trường thời gian đi muộn của đối tượng Worker
            // Nếu đi muộn thì set diMuon là 0
            Time diMuon = (compareResult < 0) ? Time.valueOf("00:00:00") : Time.valueOf(String.format("%02d:%02d:%02d", hours, minutes, seconds));

            Officer newObj = new Officer();
            newObj.setMaNhanVien(manhanvien);
            newObj.setTenNhanVien(CurrentNhanVien.getInstance().getTennhanvien());
            newObj.setDonVi(CurrentNhanVien.getInstance().getDonVi());
            newObj.setPassWord(CurrentNhanVien.getInstance().getPassWord());
            newObj.setIdGio(2);
            newObj.setNgayLamViec(ngayLam);
            newObj.setCheckIn(new Time(currentDate.getTime()));
            newObj.setStatus(2);
            newObj.setDiMuon(diMuon);

            // Insert chỉ khi thời gian checkIn không vượt quá giờ kết thúc làm việc
            nhanVienDAO.insertNhanVien(newObj);
            loadNhanVienToForm();
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        NhanVienCaChieuDAO nhanVienDAO = new NhanVienCaChieuDAO();
        java.util.Date currentDate = new java.util.Date();
        String manhanvien = CurrentNhanVien.getInstance().getManhanvien();
        Officer editOfficer = new Officer();
        editOfficer.setCheckOut(new Time(currentDate.getTime()));
        editOfficer.setIdGio(2);
        editOfficer.setStatus(1);
        editOfficer.setNgayLamViec(new Date(currentDate.getTime()));
        editOfficer.setMaNhanVien(CurrentNhanVien.getInstance().getManhanvien());

        // Lấy thời gian checkOut và thời gian kết thúc làm việc
        Time checkOut = new Time(currentDate.getTime());
        Time gioKetThuc = nhanVienDAO.getGioLamViecById(2).getThoiGianKetThuc();
        Time gioBD = nhanVienDAO.getGioLamViecById(2).getThoiGianBatDau();

        // Chuyển đổi thời gian từ java.sql.Time sang java.time.LocalTime để thuận tiện trong việc tính toán
        LocalTime localCheckOut = checkOut.toLocalTime();
        LocalTime localGioKetThuc = gioKetThuc.toLocalTime();
        LocalTime localGioBD = gioBD.toLocalTime();

        // Kiểm tra nếu thời gian checkOut trước thời gian kết thúc
        if (localCheckOut.isAfter(localGioBD) && localCheckOut.isBefore(localGioKetThuc)) {
            // Tính thời gian về sớm bằng cách lấy sự chênh lệch giữa checkOut và thời gian kết thúc
            Duration duration = Duration.between(localCheckOut, localGioKetThuc);

            // Lấy giờ, phút, giây từ thời gian về sớm
            long hours = duration.toHours();
            long minutes = duration.toMinutesPart();
            long seconds = duration.toSecondsPart();

            // Gán kết quả vào trường về sớm của đối tượng Officer
            editOfficer.setVeSom(Time.valueOf(String.format("%02d:%02d:%02d", hours, minutes, seconds)));

            // Update chỉ khi thời gian checkOut không trước thời gian kết thúc làm việc

            } else if (localCheckOut.isAfter(localGioKetThuc)) {
                // Nếu thời gian checkOut sau thời gian kết thúc làm việc, set về muộn bằng 00:00:00
                editOfficer.setVeSom(Time.valueOf("00:00:00"));
            } else {
                JOptionPane.showMessageDialog(this, "Thời gian checkOut không hợp lệ!");
            }
             nhanVienDAO.updateNhanVien(editOfficer);
             loadNhanVienToForm();

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormNhanVienChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormNhanVienChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormNhanVienChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormNhanVienChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormNhanVienChieu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
